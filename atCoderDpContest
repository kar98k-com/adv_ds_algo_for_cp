question 1
1) https://atcoder.jp/contests/dp/tasks/dp_a
solution:-
import sys
sys.setrecursionlimit(10**6)
# [int(a) for a in input().split()]
# for _ in range(int(input()))
n=int(input())
h=[int(a) for a in input().split()]
def frog1(i,n,h,val,dp):
    if i==n-1:
        return val
    if dp[i][val]!=-1:
        return dp[i][val]
    if i<=n-2:
        k1=frog1(i+1,n,h,val+abs(h[i]-h[i+1]),dp)
    if i<=n-3:
        k2=frog1(i+2,n,h,val+abs(h[i]-h[i+2]),dp)
        if i==n-3:
            return val+abs(h[i]-h[i+2])
    if i==n-2:
        return k1
    else:
        dp[i][val]=min(k1,k2)
        return dp[i][val]
dp=[]
val=sum(h)
for l in range(n):
    dp.append([])
    for j in range(val+1):
        dp[l].append(-1)
 
print(frog1(0,n,h,0,dp))


qquestion 2

import sys
sys.setrecursionlimit(10**6)
# [int(a) for a in input().split()]
# for _ in range(int(input()))
n,k=[int(a) for a in input().split()]
h=[int(a) for a in input().split()]
def frog2(i,n,k,h,val,dp):
    if i==n-1:
        return val
    if dp[i][val]!=-1:
        return dp[i][val]
    if i+1<=n-1:
        dp[i][val]=frog2(i+1,n,k,h,val+abs(h[i]-h[i+1]),dp)
    for l in range(2,k+1):
        if i+l<=n-1:
            dp[i][val]=min(dp[i][val],frog2(i+l,n,k,h,val+abs(h[i]-h[i+l]),dp))
    return dp[i][val]
dp=[]
v=sum(h)
for i in range(n):
    dp.append([])
    for j in range(v+1):
        dp[i].append(-1)
print(frog2(0,n,k,h,0,dp))


vacation 

import sys
sys.setrecursionlimit(10**6)
def vac(i,p,mat,hap=0):
    if i==len(mat):
        return hap
    if p==-1:
        return max(vac(i+1,0,mat,hap+mat[i][0]),vac(i+1,1,mat,hap+mat[i][1]),vac(i+1,2,mat,hap+mat[i][2]))
    if p==1:
        return max(vac(i+1,0,mat,hap+mat[i][0]),vac(i+1,2,mat,hap+mat[i][2]))
    elif p==2:
        return max(vac(i+1,0,mat,hap+mat[i][0]),vac(i+1,1,mat,hap+mat[i][1]))
    else:
        return max(vac(i+1,1,mat,hap+mat[i][1]),vac(i+1,2,mat,hap+mat[i][2]))
    
#for _ in range(int(input()))
#int(input())
#[int(a) for a in input().split()]
mat=[]
for _ in range(int(input())):
    mat.append([int(a) for a in input().split()])
print(vac(0,-1,mat))
